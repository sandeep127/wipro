1)
CREATE TABLE DEPT(DEPTNO NUMBER PRIMARY KEY,DNAME VARCHAR2(20) NOT NULL, LOC VARCHAR2(20) NOT NULL);
CREATE TABLE EMP_20027822(EMPNO NUMBER(5) PRIMARY KEY,ENAME VARCHAR2(20),SAL NUMBER(20) CHECK (SAL>5000),COMM NUMBER(5),DEPTNO NUMBER REFERENCES DEPT_20027822(DEPTNO))


2)
CREATE SEQUENCE S1 START WITH 10 MAXVALUE 50 INCREMENT BY 10;
CREATE SEQUENCE S2 START WITH 101 MAXVALUE 200 INCREMENT BY 1;


INSERT INTO EMP_20027822(EMPNO,ENAME,SAL,DEPTNO) VALUES(S2.NEXTVAL,'ANTHONY',6000,10);
INSERT INTO EMP_20027822(EMPNO,ENAME,SAL,COMM,DEPTNO) VALUES(S2.NEXTVAL,'JOHN',7600,1000,10);
INSERT INTO EMP_20027822(EMPNO,ENAME,SAL,DEPTNO) VALUES(S2.NEXTVAL,'ANDERSON',5500,20);
INSERT INTO EMP_20027822(EMPNO,ENAME,SAL,COMM,DEPTNO) VALUES(S2.NEXTVAL,'KEVIN',5300,500,30);



3)
UPDATE EMP_20027822 SET ENAME=LOWER(ENAME) WHERE DEPTNO=(SELECT DEPTNO FROM DEPT_20027822 WHERE LOC=HDC);






4)
CREATE OR REPLACE VIEW MY_VIEW AS SELECT E.EMPNO,E.ENAME,E.SAL,D.DNAME,D.LOC FROM EMP_20027822 E JOINS DEPT_20027822 D USING(DEPTNO);


5) CREATE SYNONYM HR_INFO FOR MY_VIEW;



6)
CREATE OR REPLACE PACKAGE EMP_PK
IS

FUNCTION ENOCHK(ENO EMP_20027822.EMPNO%TYPE) RETURN NUMBER;
PROCEDURE INSERT_TR(V_EMPNO EMP_20027822.EMPNO%TYPE, V_ENAME EMP_20027822.ENAME%TYPE, V_SAL EMP_20027822.SAL%TYPE);
PROCEDURE UPDATE_TR(V_EMPNO EMP_20027822.EMPNO%TYPE, V_ENAME EMP_20027822.ENAME%TYPE,V_SAL EMP_20027822.SAL%TYPE);
PROCEDURE DELETE_TR(V_EMPNO EMP_20027822.EMPNO%TYPE);
FUNCTION CHK_BOOLEAN(NSAL EMP_20027794.SAL%TYPE) RETURN BOOLEAN;
PROCEDURE DISPLAY_REPORT;
END;


CREATE OR REPLACE PACKAGE BODY EMP_PK
IS

FUNCTION CHK_BOOLEAN(NSAL EMP_20027822.SAL%TYPE) RETURN BOOLEAN
IS
MSAL EMP_20027822.SAL%TYPE;
BEGIN

SELECT MAX(SAL) INTO MSAL FROM EMP_20027822;
IF MSAL>NSAL THEN
RETURN TRUE;
ELSE
RETURN FALSE;
END IF;

END;



FUNCTION ENOCHK(V_EMPNO EMP_20027822.EMPNO%TYPE) RETURN NUMBER
IS
C NUMBER:=0;
BEGIN
SELECT COUNT(*) INTO C FROM EMP_20027822 WHERE EMPNO=V_EMPNO;
RETURN C;
END;

PROCEDURE DELETE_TR(V_EMPNO EMP_20027822.EMPNO%TYPE)
IS
BEGIN
IF ENOCHK(V_EMPNO)=1 THEN
DELETE FROM EMP_20027822 WHERE EMPNO=V_EMPNO;
DBMS_OUTPUT.PUT_LINE('DATA DELETED');
ELSE
RAISE_APPLICATION_ERROR(-20003,'EMPNO NOT PRESENT');
END IF;
END;

PROCEDURE UPDATE_TR(V_EMPNO EMP_20027822.EMPNO%TYPE, V_ENAME EMP_20027822.ENAME%TYPE,V_SAL EMP_20027822.SAL%TYPE)
IS
BEGIN
IF ENOCHK(V_EMPNO)=1 THEN
UPDATE EMP_20027822 SET ENAME=V_ENAME, SAL=V_SAL WHERE EMPNO=V_EMPNO;
DBMS_OUTPUT.PUT_LINE('DATA UPDATED');
ELSE
RAISE_APPLICATION_ERROR(-20003,'EMPNO NOT PRESENT');
END IF;
END;

PROCEDURE INSERT_TR(V_EMPNO EMP_20027822.EMPNO%TYPE, V_ENAME EMP_20027822.ENAME%TYPE, V_SAL EMP_20027822.SAL%TYPE)
IS
BEGIN
IF ENOCHK(V_EMPNO)=0 THEN
INSERT INTO EMP_20027822(EMPNO, ENAME, SAL) VALUES(V_EMPNO, V_ENAME, V_SAL);
DBMS_OUTPUT.PUT_LINE('DATA INSERTED');
ELSE
RAISE_APPLICATION_ERROR(-20002,'EMPNO ALREADY PRESENT');
END IF;
END;

PROCEDURE DISPLAY_REPORT
IS
CURSOR C1 IS SELECT DEPTNO, DNAME FROM DEPT_20027822;
CURSOR C2(C_DEPT EMP_20027822.DEPTNO%TYPE) IS SELECT ENAME FROM EMP_20027822 WHERE DEPTNO=C_DEPT;
C NUMBER:=0;
V_ENAME VARCHAR2(30):='';
V_DNO NUMBER:=0;
BEGIN

FOR V_REC IN C1 LOOP
DBMS_OUTPUT.PUT_LINE('--------------');
DBMS_OUTPUT.PUT_LINE(V_REC.DNAME);
DBMS_OUTPUT.PUT_LINE('--------------');
V_DNO:=V_REC.DEPTNO;

	FOR V_REC2 IN C2(V_DNO) LOOP
	
	DBMS_OUTPUT.PUT_LINE(V_REC2.ENAME);
	END LOOP;

DBMS_OUTPUT.PUT_LINE('--------------');
END LOOP;

END;


END;
